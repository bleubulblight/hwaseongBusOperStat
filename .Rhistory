for(col in na_cols) {
set(df, i = which(is.na(df[[col]])),j=col,value=round(mean(df[[col]],na.rm=T),0))
}
A <- df[,.SD,.SDcols=is.integer] |>
setcolorder(c(21,1:20)) |>
as.data.frame() |>
sapply(as.numeric)
rref(A)
orth(A)
summary(rref(A))
A[,1]
A[,10]
A[2,10]
A[,`Frozen fish`]
A[,"Frozen fish"]
Rank(A)
dim(A)
Rank(A)
rref(A)
C_A <- CS(A)
package_version(R.version)
getwd()
A <- rbind(c(-2.0,3.0,2.0),c(-4.8,8.4,1.6),c(-4.8,2.4,5.6))
A
A <- rbind(c(-2.0,4.0,2.0),c(-4.8,8.4,1.6),c(-4.8,2.4,5.6))
A
library(pracma)
eigen(A)
require(ga)
install.packages("GA")
library(GA)
library(tidyverse)
library(pracma)
library(readxl)
library(installr)
installr::updater()
library(RColorBrewer)
colors()
display.brwer.pal()
display.brewer.pal()
display.brewer.pal(1)
RColorBrewer
RColorBrewer()
brewer()
library(RColorBrewer)
RColorBrewer::brewer.pal()
RColorBrewer::brewer.pal.info
RColorBrewer::brewer.all()
RColorBrewer::brewer.pal(100,c(1:100))
RColorBrewer::brewer.pal(1,c(1:100))
RColorBrewer::brewer.pal(100,BrBG)
RColorBrewer::brewer.pal(100,"BrBG")
RColorBrewer::brewer.pal(11,"BrBG")
q()
test <- fread("C:/Users/WONGYUN/Desktop/card/new0120.csv")
library(data.table)
test <- fread("C:/Users/WONGYUN/Desktop/card/new0120.csv")
test <- fread("C:/Users/WONGYUN/Desktop/card/new0120.csv",encoding="UTF-8")
install.packages("ISLR2")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("broom", "bslib", "callr", "cli", "DBI", "dbplyr", "desc", "dplyr", "dtplyr", "evaluate", "far", "farver", "forcats", "gargle", "generics", "gert", "gh", "gitcreds", "googlesheets4", "gtable", "haven", "Hmisc", "hms", "htmlTable", "htmltools", "httr", "knitr", "latticeExtra", "lifecycle", "MASS", "MatrixModels", "modelr", "openssl", "pillar", "pracma", "processx", "ps", "quantreg", "Rcpp", "readxl", "reprex", "rlang", "rmarkdown", "rstudioapi", "rvest", "sass", "scales", "stringi", "stringr", "tibble", "tidyr", "tinytex", "usethis", "viridisLite", "xfun", "zip", "zoo"))
library(tidyverse)
library(lubridate)
library(plotly)
#### table of available data ####
avail_index <- data.frame(matrix(ncol = 4, nrow = 0))
folders <- list.files("./rawData")
for (i in 1:length(folders)) {
lineNm <- folders[i]
lineNo <- strsplit(lineNm,"_")[[1]][1]
for (j in 1:length(list.files(paste0("./rawData/",lineNm)))) {
fileNm <- list.files(paste0("./rawData/",lineNm))[j]
date <- strsplit(fileNm,"_")[[1]][1]
avail_index <- avail_index |>
rbind(unname(c(lineNo,date,lineNm,fileNm)))
}
if (i == length(folders)) {
names(avail_index) <- c("line", "date", "folder", "filename")
}
}
library(tidyverse)
library(lubridate)
library(plotly)
#### table of available data ####
avail_index <- data.frame(matrix(ncol = 4, nrow = 0))
folders <- list.files("./rawData")
for (i in 1:length(folders)) {
lineNm <- folders[i]
lineNo <- strsplit(lineNm,"_")[[1]][1]
for (j in 1:length(list.files(paste0("./rawData/",lineNm)))) {
fileNm <- list.files(paste0("./rawData/",lineNm))[j]
date <- strsplit(fileNm,"_")[[1]][1]
avail_index <- avail_index |>
rbind(unname(c(lineNo,date,lineNm,fileNm)))
}
if (i == length(folders)) {
names(avail_index) <- c("line", "date", "folder", "filename")
}
}
setwd("C:\Users\WONGYUN\Documents\GitHub\hwaseongBusOperStat")
setwd("C:/Users/WONGYUN/Documents/GitHub/hwaseongBusOperStat")
library(tidyverse)
library(lubridate)
library(plotly)
setwd("C:/Users/WONGYUN/Documents/GitHub/hwaseongBusOperStat")
#### table of available data ####
avail_index <- data.frame(matrix(ncol = 4, nrow = 0))
folders <- list.files("./rawData")
for (i in 1:length(folders)) {
lineNm <- folders[i]
lineNo <- strsplit(lineNm,"_")[[1]][1]
for (j in 1:length(list.files(paste0("./rawData/",lineNm)))) {
fileNm <- list.files(paste0("./rawData/",lineNm))[j]
date <- strsplit(fileNm,"_")[[1]][1]
avail_index <- avail_index |>
rbind(unname(c(lineNo,date,lineNm,fileNm)))
}
if (i == length(folders)) {
names(avail_index) <- c("line", "date", "folder", "filename")
}
}
#### OPEN DATA ####
for (i in nrow(avail_index)) {
this_row <- avail_index[i,]
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
}
plot(this_data$timestamp,this_data$stationSeq)
scat <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
geom_point()
#ggplotly(scat)
scat
View(avail_index)
i <- 17
this_row <- avail_index[i,]
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
plot(this_data$timestamp,this_data$stationSeq)
summary(this_data)
unique(this_data$routeId)
unique(this_data$plateNo)
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
geom_point()
ggplot(data=this_data,mapping=aes(x=timestamp,y=remainSeatCnt,colour=plateNo)) +
geom_point()
ggplot(data=this_data,mapping=aes(x=timestamp,y=remainSeatCnt,colour=plateNo,group=plateNo)) +
geom_line()
ggplot(data=this_data,mapping=aes(x=stationSeq,y=remainSeatCnt,colour=plateNo,group=plateNo)) +
geom_line()
count(nrow(filter(this_data,remainSeatCnt==-1)))
nrow(filter(this_data,remainSeatCnt==-1))
this_data["remainSeatCnt"][df["remainSeatCnt"] == -1] <- NA
this_data["remainSeatCnt"]
df["remainSeatCnt"] == -1
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
geom_point()
ggplot(data=this_data,mapping=aes(x=stationSeq,y=remainSeatCnt,colour=plateNo,group=plateNo)) +
geom_line()
test <- filter(this_data,plateNo=="경기76아1122")
ggplot(data=test,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
geom_point()
ggplot(data=test,mapping=aes(x=stationSeq,y=remainSeatCnt,colour=plateNo,group=plateNo)) +
geom_line()
ggplot(data=test,mapping=aes(x=stationSeq,y=remainSeatCnt,colour=plateNo,group=plateNo)) +
geom_point()
ggplot(data=this_data,mapping=aes(x=stationSeq,y=remainSeatCnt,colour=plateNo,group=plateNo)) +
geom_point()
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
geom_curve()
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
geom_point()
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
scale_x_discrete(labels=NULL) +
geom_point()
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
theme(axis.title.x="시간",axis.title.y="정류장")
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
theme(axis.title.x="시간",axis.title.y="정류장") |
scale_x_discrete(labels=NULL) +
geom_point()
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
theme(axis.title.x="시간",axis.title.y="정류장") +
scale_x_discrete(labels=NULL) +
geom_point()
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
xlab("시간") + ylab("정류장") +
scale_x_discrete(labels=NULL) +
geom_point()
test <- filter(this_data,plateNo=="경기76아1122")
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point()
ggplot(data=this_data,mapping=aes(x=stationSeq,y=remainSeatCnt)) +
geom_point()
ggplot(data=this_data,mapping=aes(x=stationSeq,y=remainSeatCnt)) +
heatmap()
heatmap(this_data[,c("stationSeq","remainSeatCnt")])
plot(this_data$timestamp,this_data$stationSeq)
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point()
i
this_row
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo,size=5)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point()
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo,size=2)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point()
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point(size=2)
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point(size=1)
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point(size=2)
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
#### OPEN DATA ####
for (i in nrow(avail_index)) {
this_row <- avail_index[i,]
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point(size=2)
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
}
#### OPEN DATA ####
for (i in 1:nrow(avail_index)) {
this_row <- avail_index[i,]
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point(size=2)
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
}
this_row
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(title=this_row$line, x = "시간", y = "정류장순번", color = "차량번호") +
scale_x_discrete(labels=NULL) +
geom_point(size=2)
timespace
ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(title=this_row$line, x = "시간", y = "정류장순번", color = "차량번호") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=NULL) +
geom_point(size=2)
#### OPEN DATA ####
for (i in 1:nrow(avail_index)) {
this_row <- avail_index[i,]
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
labs(title=this_row$line, x = "시간", y = "정류장순번", color = "차량번호") +
theme(plot.title = element_text(hjust = 0.5)) +
scale_x_discrete(labels=NULL) +
geom_point(size=2)
ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
}
tiemspace
timespace
timespace
test <- filter(this_data,plateNo=="경기76아3361")
test
aggregate(timestamp~stationSeq,FUN=min)
aggregate(timestamp~stationSeq,data=test,FUN=min)
test <- filter(test,stationSeq==1)
test
hist(test$timestamp)
hist(as.numeric(test$timestamp))
install.packages("Ckmeans")
install.packages("Ckmeans.1d.dp")
library(Ckmeans.1d.dp)
Ckmeans.1d.dp::Ckmeans.1d.dp(test$timestamp,k=c(1:10))
test$timestamp
Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(test$timestamp),k=c(1:10))
kmeans <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(test$timestamp),k=c(1:10))
kmeans$cluster
kmeans$withinss
kmeans$xname
kmeans$yname
kmeans <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(this_data$timestamp),k=c(1:30))
kmeans <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(this_data$timestamp),k=c(1:20))
kmeans <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filater(this_data,stationSeq==1)$timestamp),k=c(1:20))
kmeans <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:20))
Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:20))
this_data[this_data$stationSeq==1]$dispatch <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))
this_data[this_data$stationSeq==1]$dispatch
this_data[this_data$stationSeq==1]
this_data$stationSeq==1
this_data[this_data$stationSeq==1,]
this_data[this_data$stationSeq==1,]$dispatch <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))
this_data[this_data$stationSeq==1,]$dispatch <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))$cluster
this_data[this_data$stationSeq==1,]$dispatch
Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))$cluster
this_data[this_data$stationSeq==1,]
nrow(this_data[this_data$stationSeq==1,])
Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))$cluster
length(Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))$cluster)
this_data[this_data$stationSeq==1,"dispatch"] <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))$cluster
id <- c(rep(1,5), rep(2,5), rep(3,4), rep(4,2), rep(5, 1))
year <- c(1990,1991,1992,1993,1994,1990,1991,1992,1993,1994,1990,1991,1992,1994,1990,1994, 1994)
gender <- c(rep("female", 5), rep("male", 5), rep("male", 4), rep("female", 2), rep("male", 1))
dat <- data.frame(id,year,gender)
dat
aggregate(timestamp~plateNo+dispatch,FUN=min,this_data)
i
this_row$line
cbind(this_row$line,aggregate(timestamp~plateNo+dispatch,FUN=min,this_data))
cbind(line=this_row$line,aggregate(timestamp~plateNo+dispatch,FUN=min,this_data))
library(tidyverse)
library(lubridate)
library(Ckmeans.1d.dp)
setwd("C:/Users/WONGYUN/Documents/GitHub/hwaseongBusOperStat")
#### table of available data ####
avail_index <- data.frame(matrix(ncol = 4, nrow = 0))
folders <- list.files("./rawData")
for (i in 1:length(folders)) {
lineNm <- folders[i]
lineNo <- strsplit(lineNm,"_")[[1]][1]
for (j in 1:length(list.files(paste0("./rawData/",lineNm)))) {
fileNm <- list.files(paste0("./rawData/",lineNm))[j]
date <- strsplit(fileNm,"_")[[1]][1]
avail_index <- avail_index |>
rbind(unname(c(lineNo,date,lineNm,fileNm)))
}
if (i == length(folders)) {
names(avail_index) <- c("line", "date", "folder", "filename")
}
}
#### OPEN DATA ####
for (i in 1:nrow(avail_index)) {
this_row <- avail_index[i,]
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
this_data[this_data$stationSeq==1,"dispatch"] <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))$cluster
if ("dep_schedule" %in% ls()) {
dep_schedule <- rbind(dep_schedule,cbind(line=this_row$line,aggregate(timestamp~plateNo+dispatch,FUN=min,this_data)))
} else {
dep_schedule <- cbind(line=this_row$line,aggregate(timestamp~plateNo+dispatch,FUN=min,this_data))
}
# for (bus in unique(this_data$plateNo)) {
#  this_bus <- this_data |>
#    filter(plateNo==bus)
#
# }
# timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
#   labs(title=this_row$line, x = "시간", y = "정류장순번", color = "차량번호") +
#   theme(plot.title = element_text(hjust = 0.5)) +
#   scale_x_discrete(labels=NULL) +
#   geom_point(size=2)
#ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
}
this_data
this_row
summary(this_data)
hist(this_data$stationSeq)
hist(this_data$stationSeq)
sum(this_data$stationSeq==1)
sum(this_data$stationSeq==2)
sum(this_data$stationSeq==3)
sum(this_data$stationSeq==4)
sum(this_data$stationSeq==5)
i
library(tidyverse)
library(lubridate)
library(Ckmeans.1d.dp)
setwd("C:/Users/WONGYUN/Documents/GitHub/hwaseongBusOperStat")
#### table of available data ####
avail_index <- data.frame(matrix(ncol = 4, nrow = 0))
folders <- list.files("./rawData")
for (i in 1:length(folders)) {
lineNm <- folders[i]
lineNo <- strsplit(lineNm,"_")[[1]][1]
for (j in 1:length(list.files(paste0("./rawData/",lineNm)))) {
fileNm <- list.files(paste0("./rawData/",lineNm))[j]
date <- strsplit(fileNm,"_")[[1]][1]
avail_index <- avail_index |>
rbind(unname(c(lineNo,date,lineNm,fileNm)))
}
if (i == length(folders)) {
names(avail_index) <- c("line", "date", "folder", "filename")
}
}
#### OPEN DATA ####
for (i in 2:nrow(avail_index)) {
this_row <- avail_index[i,]
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
this_data[this_data$stationSeq==1,"dispatch"] <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))$cluster
if ("dep_schedule" %in% ls()) {
dep_schedule <- rbind(dep_schedule,cbind(line=this_row$line,aggregate(timestamp~plateNo+dispatch,FUN=min,this_data)))
} else {
dep_schedule <- cbind(line=this_row$line,aggregate(timestamp~plateNo+dispatch,FUN=min,this_data))
}
# for (bus in unique(this_data$plateNo)) {
#  this_bus <- this_data |>
#    filter(plateNo==bus)
#
# }
# timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
#   labs(title=this_row$line, x = "시간", y = "정류장순번", color = "차량번호") +
#   theme(plot.title = element_text(hjust = 0.5)) +
#   scale_x_discrete(labels=NULL) +
#   geom_point(size=2)
#ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
}
this_row
i
summary(this_data)
View(dep_schedule)
names(dep_schedule) <- c("노선번호","차량번호","편성","기점출발시각")
write.csv("dep_schedule.csv",dep_schedule)
write.csv(dep_schedule,"dep_schedule.csv")
write.csv(dep_schedule,"dep_schedule.csv",row.names=F,encoding="utf-8")
write.csv(dep_schedule,"dep_schedule.csv",row.names=F,fileEncoding="utf-8")
write.csv(dep_schedule,"dep_schedule.csv",row.names=F,fileEncoding="utf-8")
this_row$date
library(tidyverse)
library(lubridate)
library(Ckmeans.1d.dp)
setwd("C:/Users/WONGYUN/Documents/GitHub/hwaseongBusOperStat")
#### table of available data ####
avail_index <- data.frame(matrix(ncol = 4, nrow = 0))
folders <- list.files("./rawData")
for (i in 1:length(folders)) {
lineNm <- folders[i]
lineNo <- strsplit(lineNm,"_")[[1]][1]
for (j in 1:length(list.files(paste0("./rawData/",lineNm)))) {
fileNm <- list.files(paste0("./rawData/",lineNm))[j]
date <- strsplit(fileNm,"_")[[1]][1]
avail_index <- avail_index |>
rbind(unname(c(lineNo,date,lineNm,fileNm)))
}
if (i == length(folders)) {
names(avail_index) <- c("line", "date", "folder", "filename")
}
}
#### OPEN DATA ####
for (i in 1:nrow(avail_index)) {
this_row <- avail_index[i,]
if (this_row$date != "2022-10-25") {next}
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
this_data[this_data$stationSeq==1,"dispatch"] <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))$cluster
if ("dep_schedule" %in% ls()) {
dep_schedule <- rbind(dep_schedule,cbind(line=this_row$line,aggregate(timestamp~plateNo+dispatch,FUN=min,this_data)))
} else {
dep_schedule <- cbind(line=this_row$line,aggregate(timestamp~plateNo+dispatch,FUN=min,this_data))
}
# for (bus in unique(this_data$plateNo)) {
#  this_bus <- this_data |>
#    filter(plateNo==bus)
#
# }
# timespace <- ggplot(data=this_data,mapping=aes(x=timestamp,y=stationSeq,colour=plateNo)) +
#   labs(title=this_row$line, x = "시간", y = "정류장순번", color = "차량번호") +
#   theme(plot.title = element_text(hjust = 0.5)) +
#   scale_x_discrete(labels=NULL) +
#   geom_point(size=2)
#ggsave(paste0("./plots/timespace/",this_row$line,"_",this_row$date,".png"),timespace)
}
i
this_row
View(dep_schedule)
i <- 5
this_row <- avail_index[i,]
if (this_row$date != "2022-10-25") {next}
this_data <- read.csv(paste0("./rawData/",this_row$folder,"/",this_row$filename))
this_data$timestamp <- substr(this_data$querytime,10,15)
this_data$hms <- lubridate::hms(format(strptime(this_data$timestamp, format = "%H%M%S"), format = "%H:%M:%S"))
this_data["remainSeatCnt"][this_data["remainSeatCnt"] == -1] <- NA
clustering <- Ckmeans.1d.dp::Ckmeans.1d.dp(as.numeric(filter(this_data,stationSeq==1)$timestamp),k=c(1:30))
this_data[this_data$stationSeq==1,"dispatch"] <- clustering$cluster
clustering
filter(this_data,stationSeq==1)
write.csv(dep_schedule,"dep_schedule.csv",row.names=F,fileEncoding="utf-8")
